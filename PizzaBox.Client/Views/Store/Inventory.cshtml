@model PizzaBox.Client.Models.StoreViewModel

@{
    ViewData["Title"] = "View Inventory";
}

<h2>inventory</h2>
<br>

<form action="/store/menupizzeria" method="post">
  <button type="submit">back to menu</button>
</form>
<br>

<table class="table">
  @for (int i = 0; i < Model.Inventory.Count; i+=2)
  {
    <tr>
      <td>
          <h4>@Html.DisplayFor(modelItem => Model.Inventory[i])</h4>
      </td>
      <td>
          <h4>@Html.DisplayFor(modelItem => Model.Inventory[i+1])</h4>
      </td>
      @* <td>
          <h4>@Html.DisplayFor(modelItem => Model.Inventory[i+2])</h4>
      </td> *@
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
    </tr>
  }        
</table>

@* @using (Html.BeginForm("UpdateInventory", "Store", FormMethod.Post))
{
  @Html.ValidationMessageFor(m => m.SelectedPizza.PizzaId)
  <label>enter pizza's number to update inventory</label>
  <input type="text" id="pizzId" name="pizzaId">
  @Html.ValidationMessageFor(mo => mo.SelectedPizza.PizzaId, "", new { @class = "text-danger" })

  @Html.ValidationMessageFor(m => m.UpdateInv)
  <label>how many to add(+) or remove(-)?</label>
  <input type="text" id="UpdateInv" name="UpdateInv">
  @Html.ValidationMessageFor(mo => mo.UpdateInv, "", new { @class = "text-danger" })
  <button type="submit">add or remove</button>
} *@

