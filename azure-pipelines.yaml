name: $(date:yyyyMMdd)$(rev:.rr)

pr:
  - master

stages: build
  - stage:
    jobs:
      - job:
        pool:            
          vmImage: ubuntu-18.04 
        steps:
          - script: dotnet build
            workingDirectory: $(working_dir)

  - stage: analyze
    jobs:
      - job:
        pool:            
          vmImage: ubuntu-18.04 
        steps:
          - task: DotnetGlobalToolInstaller@0
            inputs:
              name: "dotnet-sonarscanner"
          - script: |
              dotnet sonarscanner begin /k:"BiancaVisconti_p1-BiancaVisconti" /o:"<biancavisconti>" /d:sonar.login="<token>" 
              dotnet build
              dotnet test
              dotnet sonarscanner end /d:sonar.login="<token>" 
            workingDirectory: $(working_dir)

  - stage: test
    jobs:
      - job: 
        pool:
          vmImage: ubuntu 18.04
        steps:
          - script: dotnet test --collect:"XPlat Code Coverage"
            workingDirectory: $(working_dir)

  - stage: pack
      jobs:
      - job:
        pool:
          vmImage: ubuntu 18.04
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'docker'
              command: 'login'
          - script: |
              docker image build -f dockerfile -t $DOCKER_IMAGE .
              docker image push $DOCKER_IMAGE
            workingDirectory: $(working_dir)
            env:
              DOCKER_IMAGE: $(image_name)
          - task: Docker@2
            inputs:
              containerRegistry: 'docker'
              command: 'logout'

trigger: 
  - master

variables:
  - name: image_name
    value: biancavisconti/p1proj
  - name: working_dir
    value: $(System.DefaultWorkingDirectory)/p1_project
